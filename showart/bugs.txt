Load in a 4 color png.  Hit save.  It says "Only 8 and 24 bit BMP files are supported.  Then it writes an empty file and crashes/exits 

FIXED  PROBLEM:  Jpeg library-save only supports 8 or 24 bit bitmaps.  SO -- check bitDepth BEFORE calling save!!!!!

----------------------------------------------------------------------------------------
BUG: file save/save as with no images loaded crashes
FIXED: Check for condition and put up a message box.  Graying the save and save as would have been more elegant but I don't want to spend the time figuring it out!
-----------------------------------------------------------------------------------------

Feature Request -- ADDED!!
add a checkbox to OpenFile dialog.  If true ALL files in the chosen file's directory are opened.
The value of the checkbox is persisted in Preferences

------------------------------------------------------------------------------------------

Dir with 10,000 files takes forever to open.

Problem must be in DibEntry::Set()  CFile -- opens the file.  Perhaps defer until load time?
FIXED - CFile was opening every file and running hundreds of lines of code.  Total waste.
Removed CFile call.  Unneeded
------------------------------------------------------------
BUG - Everytime you select ONE file in a directory, all files are loaded but the file you clicked
is loaded TWICE
FIXED!!!
-------------------------------------------------------------------------------------------------
FEATURE -- put super-skip, super-delete on menu
--------------------------------------------------------------------------------

Using new MFC window/app classes to implement fullscreen.

NEW BUG: ^F ^F ^F works perfectly
ESC-ESC-ESC does NOT work right
/* ISSUE--
	 * Say the screen is fullscreen BEFORE escape was pressed.  Before we get the escape key here, CFrameWndEx::PreTranslateMessage(MSG* pMsg) will get it and restore the window.
	 * Which will set the "is-full" flag to false.  So there are 2 scenarios:
	 * 1.  We are in restore state and we pressed escape.  CFrameWndEx::PreTranslateMessage(MSG* pMsg) ignored it.  We want to go full screen
	 * 2. We WERE in full screen, CFrameWndEx::PreTranslateMessage(MSG* pMsg) put it in restore state already.  We want to do nothing
	 * Unfortunately we can't just call IsFullScreen() because it will return FALSE in both situations.
	 * Solution -- MFC will never set to full screen by itself, it will only restore by itself.  So we keep track of it with the "weSetFullScreen" variable in CMainFrame.
	 * This variable is only set by CMainFrame -- not CFrameWndEx.
	 * If we call restore ourselves, the flag is set to FALSE.  If we get the escape key AND MFC restored, we have to manually set the flag to false here.
	 * Whew!!!
	 * 
	 */
*** FIXED ***
-----------------------------------------------------------------------------------
BUG: Get rid of pesky little tear-off menu on full screen
FIXED -- it's a MFCToolBar
-----------------------------------------------------------------------------------
FEATURE -- Recursive file open ???
------------------------------------------------------------------------------------